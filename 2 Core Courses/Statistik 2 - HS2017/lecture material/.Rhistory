dat <- read.csv(file = "C:/Users/kalischm/Documents/teaching/17/Bio2/V2_MultipleRegression/animal.csv", header = TRUE)
dat <- read.csv(file = "C:\user\made_\Statistik 2\lecture material\animal.csv", header = TRUE)
dat <- read.csv(file = "C:\user\made_\Statistik 2 - HS 2017\lecture material\animal.csv", header = TRUE)
dat <- read.csv(file = "C:\user\made_\Desktop\Statistik 2 - HS 2017\lecture material\animal.csv", header = TRUE)
dat <- read.csv(file = "C:\Users\made_\Desktop\Statistik 2 - HS 2017\lecture material\animal.csv", header = TRUE)
dat <- read.csv(file = "C:\Users\made_\Desktop\Statistik 2 - HS2017\lecture material\animal.csv", header = TRUE)
dat <- read.csv(file = 'C:\Users\made_\Desktop\Statistik 2 - HS2017\lecture material\animal.csv', header = TRUE)
dat <- read.csv(file = C:\Users\made_\Desktop\Statistik 2 - HS2017\lecture material\animal.csv, header = TRUE)
dat <- read.csv(file = "C:\Users\made_\Desktop\Statistik 2 - HS2017\lecture material\animal.csv", header = TRUE)
setwd()
library(ISLR)
?Default
install.packages("ISLR")
library(ISLR)
?Default
fm1 <- glm(default ~ balance, data = Default, family = binomial)
summary(fm1)
dNew <- data.frame(balance = 730)
lo <- predict.glm(fm1, newdata = dNew, type = "link", se.fit = TRUE) ## log-odds
lo
p <- predict.glm(fm1, newdata = dNew, type = "response", se.fit = TRUE) ## probability
p
p$fit/(1-p$fit) ## odds von Hand berechnen
log(p$fit/(1-p$fit)) ## ergibt wieder log-odds wie in objekt 'lo'
fm2 <- glm(default ~ student, data = Default, family = binomial)
summary(fm2)
fm3 <- glm(default ~ balance + income + student, data = Default, family = binomial)
summary(fm3)
summary(glm(default ~ balance * student + income, data = Default, family = binomial))
summary(glm(default ~ balance + student * income, data = Default, family = binomial))
predProb <- predict(fm3, data = Default, type = "response")
predDefault <- (predProb > 0.5)
table(Default$default)
table(predDefault, Default$default) ## Fehlerrate: (40 + 228) / 10000 = 0.0268
set.seed(123) ## Damit Sie mein Ergebnis reproduzieren können
k <- 10 ## wäre LOOCV auch schnell genug? Versuchen Sie es: k <- 10000
n <- nrow(Default)
folds <- sample(1:k, n, replace = TRUE)
cv.predProb <- rep(NA, n)
for (i in 1:k) {
## Schätze Modell mit allen Blöcken ausser Block i
mod <- glm(default ~ balance + student + income, data = Default[folds != i,], family = binomial)
## Welche Zeilen gehören im Originaldatensatz zu Block i ?
idx <- which(folds == i)
## Mache Vorhersage für Block i und schreibe das Ergebnis in die richtige Position (erste Datenzeile an erster Stelle von cv.predProb, zweite Datenzeile an zweiter Stelle etc.)
cv.predProb[idx] <- predict(mod, newdata = Default[folds == i,], type = "response")
}
cv.predDefault <- (cv.predProb > 0.5)
table(cv.predDefault, Default$default) ## Fehlerrate: (41 + 227) / 10000 = 0.0268
