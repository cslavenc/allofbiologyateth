dat <- read.csv(file = "C:/Users/kalischm/Documents/teaching/17/Bio2/V2_MultipleRegression/animal.csv", header = TRUE)
dat <- read.csv(file = "C:\user\made_\Statistik 2\lecture material\animal.csv", header = TRUE)
dat <- read.csv(file = "C:\user\made_\Statistik 2 - HS 2017\lecture material\animal.csv", header = TRUE)
dat <- read.csv(file = "C:\user\made_\Desktop\Statistik 2 - HS 2017\lecture material\animal.csv", header = TRUE)
dat <- read.csv(file = "C:\Users\made_\Desktop\Statistik 2 - HS 2017\lecture material\animal.csv", header = TRUE)
dat <- read.csv(file = "C:\Users\made_\Desktop\Statistik 2 - HS2017\lecture material\animal.csv", header = TRUE)
dat <- read.csv(file = 'C:\Users\made_\Desktop\Statistik 2 - HS2017\lecture material\animal.csv', header = TRUE)
dat <- read.csv(file = C:\Users\made_\Desktop\Statistik 2 - HS2017\lecture material\animal.csv, header = TRUE)
dat <- read.csv(file = "C:\Users\made_\Desktop\Statistik 2 - HS2017\lecture material\animal.csv", header = TRUE)
setwd()
getwd() ## Was ist der aktuelle Ordner?
setwd("C:/Users/kalischm/Documents/teaching/17/Bio2/V4_RegressionFuerVorhersage/kaggle/") ## Setze richtigen Ordner
getwd() ## Was ist der aktuelle Ordner?
dir() ## Welche Files sind in dem Ordner ?
tmp <- read.csv(file = "train.csv", header = TRUE) ## Lade Training Daten
tmpTest <- read.csv(file = "test.csv", header = TRUE) ## Lade Test Daten
View(tmpTest)
colnames(tmp)
idxTrain <- c(4,6:43) ## ohne Id, Open.Date, City, Type
dat <- tmp[,idxTrain]
colnames(dat) ## Pruefe, ob Auswahl funktioniert hat
idxTest <- c(1,4,6:42) ## ohne Open.Date, City, Type, revenue
datTest <- tmpTest[,idxTest]
colnames(datTest) ## Pruefe, ob Auswahl funktioniert hat
n <- nrow(dat)
n
set.seed(123)
train <- sample(n, 90)
train
fm <- lm(revenue~., data = dat, subset = train) ## "." bedeutet "alle anderen Variablen"
summary(fm)
yHut <- predict(fm,dat) ## mache Vorhersage fuer alle Datenpunkte
quadratResid <- (dat$revenue - yHut)^2 ## berechne Residuenquadrat fuer alle Datenpunkte
quadratResidTest <- quadratResid[-train] ## waehle Datenpunkte aus dem TEST-set aus
mseTest <- mean(quadratResidTest) ## berechne MSE Test
rmseTest <- sqrt(mseTest) ## Root Mean Squared Error
rmseTest ## Kaggle macht das Ranking der Vorschlaege bzgl. RMSE: 5.86 Mio
library(boot)
?cv.glm
fmVoll <- glm(revenue~., data = dat)
cv.err <- cv.glm(data = dat, glmfit = fmVoll)
sqrt(cv.err$delta) ## erste Zahl ist MSE Test;
cv.err <- cv.glm(data = dat, glmfit = fmVoll) ## wenn man LOOCV nochmal ausfuehrt, kommt genau das gleiche raus
sqrt(cv.err$delta) ## erste Zahl ist MSE Test
set.seed(123)
cv.err10<- cv.glm(data = dat, glmfit = fmVoll, K = 10)
sqrt(cv.err10$delta) ## erste Zahl ist MSE Test; RMSE: 3.67 Mio
cv.err10<- cv.glm(data = dat, glmfit = fmVoll, K = 10)
sqrt(cv.err10$delta)
fmInt <- glm(revenue~1, data = dat)
cv.errInt <- cv.glm(data = dat, glmfit = fmInt)
sqrt(cv.errInt$delta) ## erste Zahl ist MSE Test;
library(leaps)
installed.packages("leaps")
library(leaps)
m1 <- regsubsets(revenue ~ ., data = dat, method = "exhaustive", nvmax = 19) ## nvmax: Max. Anz. erklärender Variablen
install.package("leaps")
install.packages("leaps")
library(leaps)
m1 <- regsubsets(revenue ~ ., data = dat, method = "exhaustive", nvmax = 19) ## nvmax: Max. Anz. erklärender Variablen
m1s <- summary(m1)
m1s ## Beste Modelle mit vorgegebener Anzahl Variablen
plot(m1)
?plot.regsubsets
m1s$bic ## BIC Werte für die optimalen Modelle mit 1, 2, ... Variablen
ncoef<-which.min(m1s$bic) ## Modell mit 2 Variablen hat beste Vorhersagekraft gemaess BIC
ncoef
coef(m1, ncoef) ## Modellparameter für das beste Modell für Vorhersage
fmBest <- glm(revenue~P6+P8, data = dat) ## bestes Modell bzgl BIC
cv.errBest <- cv.glm(data = dat, glmfit = fmBest)
sqrt(cv.errBest$delta) ## Wie erwartet ist der Test MSE im besten Modell kleiner
m2 <- regsubsets(revenue ~ ., data = dat, method = "forward", nvmax = 38)
m2s <- summary(m2)
m2s
plot(m2)
m2s ## Beste Modelle mit vorgegebener Anzahl Variablen
m2s$bic ## BIC Werte für die optimalen Modelle mit 1, 2, ... Variablen
ncoef <- which.min(m2s$bic) ## Modell mit 1 Variablen hat beste Vorhersagekraft gemaess stepwise forward
ncoef
coef(m2, ncoef)
fmSF <- glm(revenue~City.Group, data = dat) ## bestes Modell bzgl stepwise forward
cv.errSF <- cv.glm(data = dat, glmfit = fmSF)
sqrt(cv.errSF$delta) ## Wie erwartet ist der Test MSE im besten Modell kleiner
m3 <- regsubsets(revenue ~ ., data = dat, method = "backward", nvmax = 38)
m3s <- summary(m3)
m3s
plot(m3)
m3s ## Beste Modelle mit vorgegebener Anzahl Variablen
m3s$bic ## BIC Werte für die optimalen Modelle mit 1, 2, ... Variablen
ncoef <- which.min(m3s$bic) ## Modell 8: Anderes Ergebnis als vorhergehende Methoden
ncoef
coef(m3, ncoef) ## gleiches Modell wie bei best subset
revenuePredict <- predict(fmBest, newdata = datTest)
res <- data.frame(Id=datTest$Id, Prediction=revenuePredict)
head(res)
?write.csv
write.csv(x=res, file = "myKaggleSubmission.csv", row.names = FALSE)
getwd()
setwd()
dir()
setwd(wd)
wd <- "C:/Users/made_/Desktop/Statistik 2 - HS2017/exercise material/data4"
dat <- load("ueb455154.rda")
dir()
getwd()
wd <- "C:/Users/made_/Desktop/Statistik 2 - HS2017/exercise material/data4"
setwd(wd)
dir()
dat <- load("ueb455154.rda")
View(dat1)
view(dat$dat)
print(dat$dat)
print(dat$dat(:))
fm0 <- lm(y ~ 0, data = dat)
fm0 <- lm(y ~ 1, data = dat)
dat <- load("ueb455154.rda")
fm0 <- lm(y ~ 1, data = dat)
fm0 <- lm(dat$y ~ 1, data = dat)
fm0 <- lm(dat$y ~ 1, data = dat)
fm <- lm(dat$y ~ 1, data = dat)
fm <- lm(dat$y ~ 1, data = dat)
summary(fm)
fm <- lm(dat$dat$y ~ 1, data = dat)
fm <- lm(dat1$y ~ 1, data = dat)
print(dat$dat)
print(dat$dat[c(:)]
print(dat$dat[c()]
print(dat$dat[c(1)]
print(dat$dat[c()])
print(dat)
print(dat$dat1)
print(dat1)
fm0 <- lm(dat1$y ~ 1, data = dat1)
fm0 <- lm(dat1$y ~ 1, data = dat1)
summary(fm)
summary(fm0)
rss0 <- sum(fm0$residuals^2)
mse0train <- mean(fm0$residuals^2)
# part c
fm1 <- lm(dat1$y ~x1, data=dat1)
fm3 <- lm(dat1$y ~x1+x2+x3, data=dat1)
mse1train <- mean(fm1$residuals^2)
mse3train <- mean(fm3$residuals^2)
abs(mse3train - mse1train)
summary(fm8)
fm8 <- lm(y~., data = dat1)
summary(fm8)
bic0 <- (mean(fm0$residuals^2))/96
bic8 <- (mean(fm8$residuals^2) + log(96) * 8 * rse8^2)/96
bic0 <- (mean(fm0$residuals^2))/96
rse8 <- 3.244
bic8 <- (mean(fm8$residuals^2) + log(96) * 8 * rse8^2)/96
bic0 <- (mean(fm0$residuals^2))/96
bic_diff <- abs(bic8-bic0)
print(bic_diff)
load("ueb277297.rda")
load("ueb277297.rda")
library(leaps)
fit.forw <- regsubsets( y ~ ., data = dat, method = "forward", nvmax = 5)
fit.back <- regsubsets( y ~ ., data = dat, method = "backward", nvmax = 5)
fit.back <- regsubsets( y ~ ., data = dat, method = "backward", nvmax = 5)
fit.best <- regsubsets( y ~ ., data = dat, method = "exhaustive", nvmax = 5)
sfit <- summary(fit)
which.min(sfit$bic)
sfit <- summary(fit.forw)
which.min(sfit$bic)
load("ueb277297.rda")
library(leaps)
fit.forw <- regsubsets( y ~ ., data = dat, method = "forward", nvmax = 5)
fit.back <- regsubsets( y ~ ., data = dat, method = "backward", nvmax = 5)
fit.best <- regsubsets( y ~ ., data = dat, method = "exhaustive", nvmax = 5)
sfit <- summary(fit)
which.min(sfit$bic)
sfit <- summary(fit.back)
which.min(sfit$bic)
sfit <- summary(fit.forw)
which.min(sfit$bic)
sfit <- summary(fit.best)
which.min(sfit$bic)
summary(fit.best)
which.min(fit.best$bic)
which.min(summary(fit.best)$bic)
dat <- load("ueb455154.rda")
fm0 <- lm(y ~ 1, dat)
dat <- load("ueb455154.rda")
datas <- load("ueb455154.rda")
fm0 <- lm(y ~ 1, dat)
datas <- load("ueb455154.rda")
View(dat)
datas <- load("ueb455154.rda")
fm0 <- lm(y ~ 1, dat)
summary(fm0)
rss0 <- sum(fm0$residuals^2)
mse0train <- mean(fm0$residuals^2)
fm1 <- lm(dat$y ~x1, dat)
fm3 <- lm(dat$y ~x1+x2+x3, dat)
mse1train <- mean(fm1$residuals^2)
mse3train <- mean(fm3$residuals^2)
abs(mse3train - mse1train)
fm8 <- lm(y~., dat)
summary(fm8)
rse8 <- 3.244
bic8 <- (mean(fm8$residuals^2) + log(96) * 8 * rse8^2)/96
bic0 <- (mean(fm0$residuals^2))/96
bic_diff <- abs(bic8-bic0)
print(bic_diff)
fm0 <- lm(y ~ 1, dat)
abs(mse3train - mse1train)
which.min(summary(fit.best)$bic)
coef(summary(fitbest)$bic, ncoef)
fitforw <- regsubsets( y ~ ., data = dat, method = "forward", nvmax = 5)
fitback <- regsubsets( y ~ ., data = dat, method = "backward", nvmax = 5)
fitbest <- regsubsets( y ~ ., data = dat, method = "exhaustive", nvmax = 5)
summary(fit.best)
ncoef <- which.min(summary(fitbest)$bic)
coef(summary(fitbest)$bic, ncoef)
coef(summary(fitbest), ncoef)
summary(fitback)
ncoef <- which.min(summary(fitback)$bic)
coef(summary(fitback), ncoef)
coef(summary(fitback), ncoef)
coef(summary(fitback), ncoef)
fm0 <- lm(y ~ 0, dat)
summary(fm0)
rss0 <- sum(fm0$residuals^2)
mse0train <- mean(fm0$residuals^2)
fm1 <- lm(dat$y ~x1, dat)
fm3 <- lm(dat$y ~x1+x2+x3, dat)
mse3train <- mean(fm3$residuals^2)
abs(mse3train - mse1train)
fm8 <- lm(y~., dat)
mse1train <- mean(fm1$residuals^2)
summary(fm8)
rse8 <- 3.244
bic8 <- (mean(fm8$residuals^2) + log(96) * 8 * rse8^2)/96
bic0 <- (mean(fm0$residuals^2))/96
bic_diff <- abs(bic8-bic0)
print(bic_diff)
summary(fm0)
