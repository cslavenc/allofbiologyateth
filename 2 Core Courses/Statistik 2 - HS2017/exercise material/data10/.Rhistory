for (j1 in 1:nn) {
cat("Schleife",j1," von ", nn,"\n")
for (j2 in 1:nn) {
n1 <- nAll[j1]
n2 <- nAll[j2]
macht[j1, j2] <- machtTtest2(n1 = n1, n2 = n2, s1=1, s2=5)$m
}
}
macht ## Beste Macht, wenn Gruppen unterschiedlich gross sind (Z.B. Total 100 -> 70-30)
n <- c(10, 7, 12)
mu <- c(0, -1, 1)
x <- rep(LETTERS[1:length(n)], times = n)
y <- c(rnorm(n[1], mean = mu[1]),
rnorm(n[2], mean = mu[2]),
rnorm(n[3], mean = mu[3]))
df <- data.frame(x=x, y=y)
sm <- summary(aov(y~x, data = df))
pval <- sm[[1]][[5]][1]
( pval < 0.05 )
machtAnova1 <- function(n, mu, s=1, reps = 1000, alpha = 0.05) {
res <- vector("numeric", reps)
for (i in 1:reps) {
## Simuliere Daten
x <- rep(LETTERS[1:length(n)], times = n)
y <- vector("numeric",0)
for (j in 1:length(n)) {
y <- c(y,rnorm(n[j], mean = mu[j], sd = s))
}
df <- data.frame(x=x, y=y)
## Mache Test
sm <- summary(aov(y~x, data = df))
pval <- sm[[1]][[5]][1]
## Speichere Ergebnis
res[i] <- ( pval < alpha )
}
list(m = mean(res), s = sd(res)/sqrt(reps))
}
machtAnova1(n = c(10,7,12), mu = c(0,-1,1))
n <- 5
b0 <- 0
b1 <- 1
x <- runif(n=n, min = -1, max = 1)
y <- b0 + b1*x + rnorm(n, mean = 0, sd = 1)
sm <- summary(lm(y~x))
sm
sm$coefficients
pval <- sm$coefficients[2,4]
(pval < 0.05)
machtLM <- function(n = 5, b0 = 0, b1 = 1, s=1, reps = 1000, alpha = 0.05) {
res <- vector("numeric", reps)
for (i in 1:reps) {
## Simuliere Daten
x <- runif(n=n, min = -1, max = 1)
y <- b0 + b1*x + rnorm(n, mean = 0, sd = s)
## Mache Test
tmp <- lm(y~x)
pval <- summary(tmp)$coefficients[2,4]
## Speichere Ergebnis
res[i] <- (pval < alpha)
}
list(m = mean(res), s = sd(res)/sqrt(reps))
}
machtLM()
set.seed(123)
p1 <- 0.3
p2 <- 0.1
n1 <- n2 <- 50
x1 <- rbinom(n=1, size=n1, prob=p1)
x2 <- n1 - x1
y1 <- rbinom(n=1, size=n2, prob=p2)
y2 <- n2 - y1
tt <- matrix(c(x1,y1,x2,y2),2,2)
tmp <- fisher.test(tt)
pval <- tmp$p.value
pval < 0.05
machtFisher <- function(n1 = 50, n2 = 50, p1 = 0.3, p2 = 0.1, reps = 1000, alpha = 0.05) {
res <- vector("numeric", reps)
for (i in 1:reps) {
## Simuliere Daten
x1 <- rbinom(n=1, size=n1, prob=p1)
x2 <- n1 - x1
y1 <- rbinom(n=1, size=n2, prob=p2)
y2 <- n2 - y1
tt <- matrix(c(x1,y1,x2,y2),2,2)
## Mache Test
tmp <- fisher.test(tt)
pval <- tmp$p.value
## Ergebnis des Tests
res[i] <- (pval < alpha)
}
list(m = mean(res), s = sd(res)/sqrt(reps))
}
machtFisher()
install.packages("pwr")
?dnorm
?dnorm # normal distribution
?qnorm
?pt
?rbinom
?dnorm # normal distribution
res1 <- dnorm(x1, mean1, sd1)
mean1 <- -8.1
sd1 <- 0.25
x1 <- -10.1
res1 <- dnorm(x1, mean1, sd1)
?rbinom # binomial distribution; generates random deviates
mean2 <- 13
sd2 <- 0.1
x2 <- 1
res2 <- dbinom(x2, mean2, sd2)
res2 <- pbinom(x2, mean2, sd2)
df3 <- 3
res3 <- 0.6
alpha <- 0.05
set.seed(7408)
mean4 <- 11
sd4 <- 0.4
n4 <- 9
x4 <- rnorm(n4, mean4, sd4)
tmp4 <- t.test(x4)
res[i] <- (tmp$p.value < alpha)
res[i] <- (tmp4$p.value < alpha)
res[i] <- (tmp4$p.value < alpha)
res <- vector('numeric', 9)
res[i] <- (tmp4$p.value < alpha)
res <- (tmp4$p.value < alpha)
tmp4$p.value
x4 <- rbinom(n4, mean4, sd4)
tmp4 <- t.test(x4)
res <- vector('numeric', 9)
res <- (tmp4$p.value < alpha)
tmp4$p.value
load("ueb532490.rda")
set.seed(6841)
N <- 13
reps <- 75
beta0 <- 32
betaA <- 36
alpha <- 0.03
wd <- "C:/Users/made_/Desktop/Statistik 2 - HS2017/exercise material/data10"
setwd(wd)
load("ueb532490.rda")
load("ueb532490.rda")
set.seed(6841)
N <- 13
reps <- 75
beta0 <- 32
betaA <- 36
alpha <- 0.03
View(sim)
View(sim)
View(test)
View(test)
View(sim)
View(sim)
View(test)
View(sim)
machttest1 <- function(N, beta0, betaA, reps, alpha) {
res <- vector('numeric', reps)
for (i in 1:reps){
X_sim <- sim(N, betaA)
p.val <- test(X_sim, beta0)
res[i] <- (p.val < alpha)
}
list(m=mean(res), s=sd(res)/sqrt(reps))
}
View(machttest1)
lis
list()
list(m=mean(res), s=sd(res)/sqrt(reps))
set.seed(6841)
N <- 13
reps <- 75
beta0 <- 32
betaA <- 36
alpha <- 0.03
machttest1 <- function(N, beta0, betaA, reps, alpha) {
res <- vector('numeric', reps)
for (i in 1:reps){
X_sim <- sim(N, betaA)
p.val <- test(X_sim, beta0)
res[i] <- (p.val < alpha)
}
list(m=mean(res), s=sd(res)/sqrt(reps))
}
machttest1()
machttest1(N, beta0, betaA, reps, alpha)
machtBinom <- function(n=50, reps = 1000, alpha = 0.05, pA = 0.7,
p0 = 0.5, alt = "two.sided") {
res <- vector("numeric", reps)
for (i in 1:reps) {
x <- rbinom(n=1, size = n, prob = pA) ## Simuliere Daten
tmp <- binom.test(x, n = n, p = p0, alternative = alt) ## Mache Test
res[i] <- (tmp$p.value < alpha) ## Speichere Ergebnis
}
list(m = mean(res), s = sd(res)/sqrt(reps) )
}
machtBinom() ## default Werte: n = 50, reps = 1000, alpha = 0.05, etc.
machtBinom(n=30) ## default Werte: reps = 1000, alpha = 0.05, etc.
machttest1(N, beta0, betaA, reps, alpha)
load("ueb710862.rda")
machttest1(N, beta0, betaA, reps, alpha)
set.seed(6841)
N <- 13
reps <- 75
beta0 <- 32
betaA <- 36
alpha <- 0.03
machttest1 <- function(N, beta0, betaA, reps, alpha) {
res <- vector('numeric', reps)
for (i in 1:reps){
X_sim <- sim(N, betaA)
p.val <- test(X_sim, beta0)
res[i] <- (p.val < alpha)
}
list(m=mean(res), s=sd(res)/sqrt(reps))
}
machttest1(N, beta0, betaA, reps, alpha)
tmp1 <- machttest1(7, 52, 53, 0.06)
tmp1 <- machttest1(7, 52, 53, 51, 0.06)
tmp2 <- machttest1(7, 52, 58, 51, 0.06)
tmp1$m - tmp2$m
set.seed(7656)
tmp1 <- machttest1(7, 52, 53, 51, 0.06)
tmp2 <- machttest1(7, 52, 58, 51, 0.06)
tmp1$m - tmp2$m
set.seed(3097)
tmp1 <- machttest1(12, 55, 58, 64, 0.04)
tmp2 <- machttest1(24, 55, 58, 64, 0.04)
tmp1$m - tmp2$m
set.seed(884)
tmp1 <- machttest1(15, 60, 63, 14, 0.04)
tmp2 <- machttest1(15, 60, 63, 28, 0.04)
tmp1$m - tmp2$m
tmp1$s - tmp2$s
load("ueb710862.rda")
set.seed(9)
View(machtTtest2)
set.seed(9)
tt1 <- machtTtest2()
tt2 <- machtTtest2(alt = 'greater')
tt1$m - tt2$m
View(machtLM)
set.seed(4500)
tt1 <- machtLM(s=2)
tt2 <- machtLM(s=4)
tt1$m - tt2$m
View(machtAnova1)
machtAnova1()
set.seed(8029)
set.seed(8029)
tt1 <- machtAnova1(n=14)
tt2 <- machtAnova1(n=28)
tt1$m - tt2$m
tt1 <- machtAnova1(n=c(14,14,14))
tt2 <- machtAnova1(n=c(28,28,28))
tt1$m - tt2$m
View(machttest1)
View(machtTtest1)
set.seed(8741)
vol <- 1.7
alpha <- 0.05
n <- 35
sd <- 0.9
volA <- 1.5
temp <- machtTtest1(15, 1.7, 1.5, 0.9, alt = 'lower')
temp <- machtTtest1(15, 1.7, 1.5, 0.9, alt = 'less')
temp$p.val
temp$p.value
temp <- machtTtest1(n=15, m0=1.7, mA=1.5, s=0.9, alt = 'less')
temp$p.value
View(machtBinom)
set.seed(9)
tt1 <- machtTtest2(alt = "greater")
tt2 <- machtTtest2()
tt1$m - tt2$m
res1 <- pnorm(x1, mean1, sd1)
alpha <- 0.05
mean1 <- -8.1
sd1 <- 0.25
x1 <- -10.1
res1 <- pnorm(x1, mean1, sd1)
res1
res1 <- pnorm(x1, mean1, sd1)$p.value
res1 <- pnorm(x1, mean1, sd1)$p
res1 <- pwr.norm.test(x1, mean1, sd1)
library("pwr")
res1 <- pwr.norm.test(x1, mean1, sd1)
mean2 <- 13
sd2 <- 0.1
x2 <- 1
res2 <- dbinom(x2, mean2, sd2)
res2
mean1 <- -8.1
sd1 <- 0.25
x1 <- -10.1
res1 <- qnorm(x1, mean1, sd1)
mean1 <- -8.1
sd1 <- 0.25
x1 <- -10.1
res1 <- qnorm(x1, mean1, sd1)
res1
res1 <- pnorm(x1, mean1, sd1)
res1
res1 <- dnorm(x1, mean1, sd1)
res1
set.seed(7408)
mean4 <- 11
sd4 <- 0.4
n4 <- 9
x4 <- rbinom(n4, mean4, sd4)
tmp4 <- t.test(x4)
res <- vector('numeric', 9)
res <- (tmp4$p.value < alpha)
tmp4$p.value
res1
set.seed(8741)
vol <- 1.7
alpha <- 0.05
n <- 35
sd <- 0.9
volA <- 1.5
temp <- machtTtest1(n=15, m0=1.7, mA=1.5, s=0.9, alt = 'less')
temp$p.value
temp
temp
temp <- t.test(n=15, m0=1.7, mA=1.5, s=0.9, alt = 'less')
volA <- 1.5
d <- (vol-volA)/sd
temp <- pwr.norm.test(d=d, n=n, alt = 'less')
temp$p.value
temp
temp <- pwr.norm.test(d=d, n=n, alternative = 'less')
temp$p.value
temp
df3 <- 3
res3 <- 0.6
r <- dt(2,df3) #trying to make an educated guess for x
r
r <- dt(20,df3) #trying to make an educated guess for x
summary((r))
r
r <- dt(1,df3) #trying to make an educated guess for x
r
r <- dt(-1,df3) #trying to make an educated guess for x
r
r <- dt(0.2,df3) #trying to make an educated guess for x
r
r <- dt(0.05,df3) #trying to make an educated guess for x
r
r <- dt(0.01,df3) #trying to make an educated guess for x
r
r <- dt(0.00000000001,df3) #trying to make an educated guess for x
r
r <- dt(0,df3) #trying to make an educated guess for x
r
r <- dt(0.015,df3) #trying to make an educated guess for x
r
df3 <- 4
res3 <- 0.6
r <- dt(0.015,df3) #trying to make an educated guess for x
r
r <- dt(0.005,df3) #trying to make an educated guess for x
r
r <- dt(0.00005,df3) #trying to make an educated guess for x
r
r <- dt(0.00001,df3) #trying to make an educated guess for x
r
r <- pt(0.00001,df3) #trying to make an educated guess for x
r
r <- pt(0.0000001,df3) #trying to make an educated guess for x
r
r <- pt(0.01,df3) #trying to make an educated guess for x
r
r <- pt(1,df3) #trying to make an educated guess for x
e
r
r <- pt(0.7,df3) #trying to make an educated guess for x
r
r <- pt(0.5,df3) #trying to make an educated guess for x
r
source('C:/Users/made_/Desktop/Statistik 2 - HS2017/exercise material/data10/quiz10.R', echo=TRUE)
r <- pt(0.05,df3) #trying to make an educated guess for x
r
r <- pt(0.08,df3) #trying to make an educated guess for x
r
r <- pt(0.1,df3) #trying to make an educated guess for x
r
r <- pt(0.2,df3) #trying to make an educated guess for x
r
r <- pt(0.29,df3) #trying to make an educated guess for x
r
r <- pt(0.28,df3) #trying to make an educated guess for x
r7
r
r <- pt(0.267,df3) #trying to make an educated guess for x
r
r <- pt(0.268,df3) #trying to make an educated guess for x
r
r <- pt(0.2689,df3) #trying to make an educated guess for x
r
r <- pt(0.26899,df3) #trying to make an educated guess for x
r
r <- pt(0.269,df3) #trying to make an educated guess for x
r
r <- pt(0.2695,df3) #trying to make an educated guess for x
r
r <- pt(0.2699,df3) #trying to make an educated guess for x
r
r <- pt(0.2699999,df3) #trying to make an educated guess for x
r
r <- pt(0.27,df3) #trying to make an educated guess for x
r
r <- pt(0.279,df3) #trying to make an educated guess for x
r
r <- pt(0.275,df3) #trying to make an educated guess for x
r
r <- pt(0.2732,df3) #trying to make an educated guess for x
r
r <- pt(0.273,df3) #trying to make an educated guess for x
r
r <- pt(0.272,df3) #trying to make an educated guess for x
r
r <- pt(0.271,df3) #trying to make an educated guess for x
r
r <- pt(0.2705,df3) #trying to make an educated guess for x
r
r <- pt(0.2708,df3) #trying to make an educated guess for x
r
r <- pt(0.27065,df3) #trying to make an educated guess for x
r
r <- pt(0.27068,df3) #trying to make an educated guess for x
r
r <- pt(0.27069,df3) #trying to make an educated guess for x
r
r <- pt(0.2707,df3) #trying to make an educated guess for x
r
r <- pt(0.27075,df3) #trying to make an educated guess for x
r
r <- pt(0.27074,df3) #trying to make an educated guess for x
r
r <- pt(0.27072,df3) #trying to make an educated guess for x
r
r <- pt(0.270725,df3) #trying to make an educated guess for x
r
r <- pt(0.270724,df3) #trying to make an educated guess for x
r
r <- pt(0.270725,df3) #trying to make an educated guess for x
r
set.seed(7408)
mean4 <- 11
sd4 <- 0.4
n4 <- 9
x4 <- rbinom(n4, mean4, sd4)
tmp4 <- t.test(x4)
x4
tmp4
tmp4$p-value
tmp4$p.value
temp
temp
sim_d <- rt(n=n, df=68) # df = n+n - 2
temp <- t.test(x=sim_d, mu = 0.2, paried = TRUE, alternative = 'less')
temp$p.value
temp
View(machtTtest2)
temp <- machtTtest2(n1=35, n2=35, m1=1.7, m2=1.5, s1=0.9, alt = 'less')
temp
x4 <- rbinom(n4, 1)
tmp4 <- t.test(x4)
x4 <- rbinom(n4, 1, 0.95)
tmp4 <- t.test(x4)
temp4
tmp4
(7408)
(7408)
(7408)
set.seed(7408)
mean4 <- 11
sd4 <- 0.4
n4 <- 9
x4 <- rbinom(n4, 1, 0.95)
tmp4 <- t.test(x4)
tmp4
set.seed(8741)
vol <- 1.7
alpha <- 0.05
n <- 35
sd <- 0.9
volA <- 1.5
d <- (vol-volA)/sd
sim_d <- rt(n=n, df=68) # df = n+n - 2
temp <- machtTtest2(n1=35, n2=35, m1=1.7, m2=1.5, s1=0.9, alt = 'less')
temp
set.seed(7408)
mean4 <- 11
sd4 <- 0.4
n4 <- 9
x4 <- rbinom(n4, 11, 0.4)
p_mle <- sum(x4)/(9*11)
p_mle
set.seed(8741)
vol <- 1.7
alpha <- 0.05
n <- 35
sd <- 0.9
volA <- 1.5
d <- (vol-volA)/sd
sim_d <- rt(n=n, df=68) # df = n+n - 2
temp <- t.test(sim_d)
temp
temp
