Fval3 <- 4.932
MSE <- 1.4
MS3 <- Fval3 * MSE
SS3 <- 13.9
df3 <- SS3 / MS3
df3
df3 <- floor(df3)
df3
df3 <- floor(SS3 / MS3)
df3
dfe <- floor(SSe / MSE)
SSe <- 33.7
dfe <- floor(SSe / MSE)
dfe
dat <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/unbalanced.dat")
dat
install.packages("car")
library("car")
fit1 <- aov(Y ~ A*B, data = dat)
fit2 <- Anova(fit1, type = "II")
dat
dat <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/unbalanced.dat")
library("car")
fit1 <- aov(Y ~ A*B, data = dat)
fit1 <- aov(dat$Y ~ A*B, data = dat)
fit1 <- aov(Y ~ A*B, data = d.stream)
d.stream <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/unbalanced.dat")
library("car")
fit1 <- aov(Y ~ A*B, data = d.stream)
fit1 <- aov(dat$Y ~ dat$A * dat$B, data = dat)
fit1 <- aov(Y ~ A*B, data = dat1)
dat1 <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/unbalanced.dat")
library("car")
fit1 <- aov(Y ~ A*B, data = dat1)
dat2 <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/coffee.dat")
dat2
with(dat2, interaction.plot(x.factor = density, trace.factor = location,
response = coffee))
dat2 <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/coffee.dat")
with(dat2, interaction.plot(x.factor = density, trace.factor = location,
response = coffee))
interaction.plot(x.factor = dat2$density, trace.factor = dat2$location,
response = dat2$coffee)
dat2$coffee
dat2$location
xtabs(~ location + density)
xtabs(~ location + density, data = dat2)
dat2$V2
dat2 <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/coffee.dat",
header = TRUE)
dat2
xtabs(~ location + density, data = dat2)
with(dat2, interaction.plot(x.factor = density, trace.factor = location,
response = coffee))
dat <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/unbalanced.dat",
header = TRUE)
library("car")
fit1 <- aov(Y ~ A*B, data = dat)
fit2 <- Anova(fit1, type = "II")
options(contrasts = c("contr.sum", "contr.sum"))
fit3 <- Anova(fit1, type = "III")
fit.null <- aov(Y ~ 1, data = dat)
fit.main <- aov(Y ~ A + B, data = dat)
anova(fit.null, fit.main)
dat2 <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/coffee.dat",
header = TRUE)
xtabs(~ location + density, data = dat2)
with(dat2, interaction.plot(x.factor = density, trace.factor = location,
response = coffee))
dat2
combinations <- expand.grid(location = c("Taglieda", "Pfyn", "Rheinau"),
exposure = c("short", "long", "permanent"))
data <- data.frame(rbind(combinations, combinations),
y = c(25, 45, 50, 42, 62, 52, 62, 80, 88,
25, 42, 50, 38, 58,62, 55, 75, 95))
xtabs(~ location + exposure, data = data)
fit4 <- aov(coffee ~ density + location, data = dat2)
summary(fit4)
plot(fit4, which = 3)
plot(fit4, which = 2)
n <- 10
k <- 4
s <- choose(10,4)
s
combn(10,4)
m <- combn(10,4)
m
m <- combn(6,4)
m
m <- combn(6,3)
m
####
install.packages("ibd")
install.packages("daewr")
library("ibd")
lambda <- 2*3/19
des.bibd <- bibd(20, 4, 2, 4, lambda)
des.bibd
lambda
des.bibd <- bibd(6, 10, 5, 3, 2)
des.bibd
des.bibd$design
n.sim <- 1000
mu <- c(57,63,rep(60,3))
sigma2 <- 7.5
n <- 4
g <- length(mu)
group <- (factor(rep(LETTERS[1:g], each = n)))
results <- numeric(n.sim)
for(i in n.sim){
# Simulate response and build data set
y <- rnorm(n * g, mean = rep(mu, each = n), sd = sqrt(sigma2))
data <- data.frame(y=y, group=group)
# fit 1-way ANOVA model
fit1 <- aov(y ~ group, data = data)
# Extract results with global F-test
results[i] <- summary(fit1)[[1]][1, "Pr(>F)"] < 0.05 # 1 = reject
}
mean(results)
results
group <- factor(rep(LETTERS[1:g], each = n))
results <- numeric(n.sim)
for(i in n.sim){
# Simulate response and build data set
y <- rnorm(n * g, mean = rep(mu, each = n), sd = sqrt(sigma2))
data <- data.frame(y=y, group=group)
# fit 1-way ANOVA model
fit1 <- aov(y ~ group, data = data)
# Extract results with global F-test
results[i] <- summary(fit1)[[1]][1, "Pr(>F)"] < 0.05 # 1 = reject
}
mean(results)
mean
results
data
fit1
summary(fit1)
for(i in 1:n.sim){
# Simulate response and build data set
y <- rnorm(n * g, mean = rep(mu, each = n), sd = sqrt(sigma2))
data <- data.frame(y=y, group=group)
# fit 1-way ANOVA model
fit1 <- aov(y ~ group, data = data)
# Extract results with global F-test
results[i] <- summary(fit1)[[1]][1, "Pr(>F)"] < 0.05 # 1 = reject
}
mean(results)
for(i in 1:n.sim){
# Simulate response and build data set
y <- rnorm(n * g, mean = rep(mu, each = n), sd = sqrt(sigma2))
data <- data.frame(y=y, group=group)
# fit 1-way ANOVA model
fit1 <- aov(y ~ group, data = data)
# Extract results with global F-test
results[i] <- summary(fit1)[[1]][1, "Pr(>F)"] < 0.05 # 1 = reject
}
mean(results)
n <- 6
g <- length(mu)
group <- factor(rep(LETTERS[1:g], each = n))
results <- numeric(n.sim)
for(i in 1:n.sim){
# Simulate response and build data set
y <- rnorm(n * g, mean = rep(mu, each = n), sd = sqrt(sigma2))
data <- data.frame(y=y, group=group)
# fit 1-way ANOVA model
fit1 <- aov(y ~ group, data = data)
# Extract results with global F-test
results[i] <- summary(fit1)[[1]][1, "Pr(>F)"] < 0.05 # 1 = reject
}
mean(results)
for(i in 1:n.sim){
# Simulate response and build data set
y <- rnorm(n * g, mean = rep(mu, each = n), sd = sqrt(sigma2))
data <- data.frame(y=y, group=group)
# fit t-test model
fit2 <- t.test(y~group, mean = 61, data = data)
# Extract results with global F-test
results[i] <- summary(fit1)[[1]][1, "Pr(>F)"] < 0.05 # 1 = reject
}
install.packages("cmdscale")
install.packages("isoMDS")
?+
## Visualize data ####
library(ggplot2)
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("cluster")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
zins <- 0.0002
worktime <- 45  # in years
6000*(1+zins)^worktime
des.bibd$design
6000*(1+0.0002)
6001.2*(1+0.0002)^44
dat1 <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/alloy.dat")
dat1
with(dat1, interaction.plot(x.factor = "strength", trace.factor = "casting"))
plot(dat1)
plot(dat1, which = 2)
plot(dat1, which = 1)
ggplot(Pastes, aes(y = cask, x = strength)) + geom_point() + facet_grid(batch ~ .)
library(lmerTest) ## or library(lme4)
data("Pastes", package = "lme4")
?Pastes ## info about data set
str(Pastes)
head(Pastes, 10)
library(ggplot2)
ggplot(Pastes, aes(y = cask, x = strength)) + geom_point() + facet_grid(batch ~ .)
xtabs(~ batch + cask, data = Pastes)
plot(fit4, which = 2) # a trafo is necessary
source('C:/Users/made_/Desktop/ETH/Extracurriculum/ANOVA/Week 6/series3.R', echo=TRUE)
plot(fit4, which = 2) # a trafo is necessary
stripchart(strength ~ location, vertical = TRUE, pch = 1, data = dat1)
dat1
dat1 <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/alloy.dat",
header = TRUE)
stripchart(strength ~ location, vertical = TRUE, pch = 1, data = dat1)
dat1
stripchart(strength ~ casting, vertical = TRUE, pch = 1, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 2, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 0, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 3, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 4, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 5, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 6, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 7, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 8, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 9, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 10, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 11, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 120, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 121, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 300, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 150, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = -1, data = dat1)
stripchart(strength ~ casting, vertical = TRUE, pch = 1, data = dat1)
dat1
Pastes
dat1 <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/ibd.dat")
stripchart(dat1)
dat1
dat1 <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/ibd.dat",
header = TRUE)
dat1
stripchart(y ~ block + treatment, data= dat1)
stripchart(y ~ block, data= dat1)
library(crossdress)
library(crossdes)
install.packages("crossdes")
library("crossdes")
install.packages("AlgDesign")
library("crossdes")
tab <- xtabs(~ block + treatment, data = dat1)
tab
fm1 <- aov(y ~ block, data = dat1)
fm1
fm1q <- fm1 <- aov(y ~ block + treatment, data = dat1)
fm1q
fm2 <- drop1(fm1)
fm2
fm1 <- aov(y ~ block + treatment, data = dat1)
fm1 <- aov(y ~ block + treatment, data = dat1)
fm2 <- drop1(fm1)
summary(fm1)
summary(fm2)
fm2 <- drop1(fm1, test = "F")
summary(fm2)
par(mfrow = c(1,2))
plot(fm1, which = 1:2)
fm1 <- aov(y ~ block + treatment, data = dat1)
summary(fm1)
fm2 <- drop1(fm1, test = "F")
summary(fm2)
par(mfrow = c(1,2))
plot(fm1, which = 1:2)
TukeyHSD(fm1, which = "treatment")
TukeyHSD(fm1, which = "treatment")
summary(TukeyHSD(fm1, which = "treatment"))
stripchart(y ~ block, data = dat1, pch = 1)
stripchart(y ~ block, data = dat1, pch = 1, vertical = TRUE)
tab <- xtabs(~ block + treatment, data = dat1)
stripchart(y ~ block, data = dat1, pch = 1, vertical = TRUE)
stripchart(y ~ block, data = dat1, pch = 1, vertical = TRUE, xlab = "block")
stripchart(y ~ block, data = dat1, pch = 1, vertical = TRUE, xlab = "block")
summary.glht
library("multcomp")
summary.glht
install.packages("cmdscale") # not available
install.packages("isoMDS")   # not available
install.packages("cluster")
dd <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/rainDay.txt", header=T)
dd
as.Date(dd, format="DATE")
as.Date(dd, format = "%m/%d/%y")
str(dd)
size(dd)
dd <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/rainDay.txt", header=T)
as.Date(dd, format = "%m/%d/%y")
as.Date(dd, "%m/%d/%y")
dd
as.Date(dd, "%d/%m/%y")
as.Date(dd[1,:], "%d/%m/%y")
as.Date(dd[1,], "%d/%m/%y")
dd[1,]
dd[,1]
as.Date(dd[,1], "%d/%m/%y")
as.Date(dd[,1], "%d/%m/%y")
dd
as.Date(dd[,1], "%d/%m/%y")
as.Date(dd[,1], format="%d/%m/%y")
dd2 <- as.Date(dd[,1], format="%d/%m/%y")
dd2
dd
dd <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/rainDay.txt", header=T)
dd2 <- as.Date(dd[,1], format="%d/%m/%y")
dd2 <- as.Date(dd[,1], format="DATE")
dd2
d
dd
dd[,1]
dd2 <- as.Date(dd[,1])
dd2 <- as.Date(dd[,1], 'DATE')
dd2
ts <- dd[,2]
ts
?weekdays
weekdays(ts)
weekdays(dd2)
weekdays(dd)
weekdays(dd[,1])
weekdays(dd[,1], abbreviate = FALSE)
weekdays(dd[,1], abbreviate = FALSE)
dd[,1]$1
dd[,1]$Date
dd[,1]
dd2 <- as.Date(dd[,1], format='%y%m%d') # doesnt work
dd2
dd2 <- as.Date(dd[,1], format='%y %m %d') # doesnt work
dd2
dd[,1]
dd2 <- as.Date(dd[,1], format='%d %m %Y') # doesnt work
dd2
ddstring <- str(dd[,1])
ddstring
ddstring$
1
ddstring[1]
ddstring$Date
ddstring <- as.Character(dd[,1])
ddstring <- as.character(dd[,1])
ddstring
dd2 <- as.Date(ddstring, format='%d %m %Y') # doesnt work
dd2
dd2 <- as.Date(ddstring, format ='%d %m %Y') # doesnt work
dd2
dd2 <- as.Date(ddstring, format ="%d %m %Y") # doesnt work
dd2
ddstring
ddstring[1]
as.string
?as.string
as?vector
?as.vector
ddstring <- as.vector(dd[,1])
dds
ddstring
ddstring <- as.vector(dd[,1])
dd2 <- as.Date(ddstring, format ="%d %m %Y") # doesnt work
dd2
ddstring
roadkillData <- read.delim("RoadKills.txt", header = T)
roadkillData <- read.delim("Roadkills.txt", header = T)
getwd()
wd <- "C:/Users/made_/Desktop/ETH/4 Block Courses/Discovering Statistics using R/MEMoR/data"
setwd(wd)  # location of data files
roadkillData <- read.delim("Roadkills.txt", header = T)
View(roadkillData)
rk1 <- glm(TOT.N ~ D.PARK, family = poisson, data = roadkillData)
rk1
summary(rk1)
